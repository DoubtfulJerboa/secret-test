name: loop secret

on:
  push:
    branches:
      - main

jobs: 
    getenvironments:
        runs-on: ubuntu-latest
        outputs: 
            enviros: ${{ toJson(steps.getenvs.outputs.envs) }}
        steps:
            - id: getenvs
              run: |
                echo 'envs=["Enviro1", "Customer"]' >> "$GITHUB_OUTPUT"
    matrixenvironments:
        needs: getenvironments
        # this method is able to repeat the job for every environment
        # this would then have every customer as an environment within the repo, with all their secrets per environment
        strategy:
            matrix: 
                enviro: ${{ needs.getenvironments.outputs.enviros }}
        runs-on: ubuntu-latest
        environment: ${{ matrix.enviro }}
        steps:
            - run: echo '${{ secrets.SECRET }}'
    # secretstoenv:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - run: |
    #             echo "$ALLSECRETS"
    #             echo "$CLIENTS"
    #           shell: bash
    #           env:
    #             ALLSECRETS: ${{ toJson(secrets) }}
    #             CLIENTS: ${{toJson(secrets.CLIENTSJSON)}}
    # job1:
    #     runs-on: ubuntu-latest
    #     outputs:
    #       matrix: ${{ steps.set-matrix.outputs.matrix }}
    #     steps:
    #       - id: set-matrix
    #         env:
    #             CLIENTJSON: ${{vars.CLIENTJSON}}
    #         run: echo 'matrix=${{env.CLIENTJSON}}' >> $GITHUB_OUTPUT
    
    # matrixotest:
    #     # needs: job1
    #     runs-on: ubuntu-latest
    #     strategy:
    #         matrix: 
    #             client: ${{fromJSON(vars.CLIENTJSON)}}
    #     steps:
    #         - run: echo "${{ matrix }}"
    
    # do:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - run: echo "foooobar"
    #         - run: echo '${{ secrets.CLIENTS }}'
    #         # - uses: actions/setup-python@v4
    #         #   with:
    #         #     python-version: '3.x'
    #         # - name: python shiz
    #         #   uses: jannekem/run-python-script-action@v1
    #         #   with:
    #         #     script: |
    #         #       import json
    #         #       print("theoretically loop through each one for deployment, but need to make these referencable from deployment? or somehow remake deployment all in python")
    #         #       for item in json.loads("""${{secrets.CLIENTS}}"""):
    #         #         print(item)

    #         # this only works for single line entries "one" "two" "three"
    #         - run: |
    #             declare -a clients=(${{secrets.CLIENTS}})
    #             for i in "${clients[@]}"
    #             do
    #                 echo "$i"
    #             done