name: loop secret

on:
  push:
    branches:
      - main

jobs: 
    getenvironments:
        runs-on: ubuntu-latest
        outputs: 
            enviros: ${{ steps.getenvs.outputs.envs }}
        steps:
            - id: getenvs
              run: |            
                environments=()
                pageNum=1
                total=1
                
                while [ ${#environments[@]} -lt $total ]; do
                    res=$(curl -s -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{github.token}}" "https://api.github.com/repos/${{github.repository}}/environments?per_page=100&page=$pageNum")
                    
                    envs=($(echo "$res" | jq -r '.environments[].name'))
                    total=$(echo "$res" | jq -r '.total_count')
                    
                    if [ ${#envs[@]} -eq 0 ]; then
                        echo "An error has occurred while attempting to fetch the environments"
                        exit 1
                    fi
                    
                    environments+=("${envs[@]}")
                    ((pageNum++))
                done
                
                envlist=$(printf '%s\n' "${environments[@]}" | jq -R . | jq -sc .) >> "$GITHUB_OUTPUT"

                echo envs=$envlist >> $GITHUB_OUTPUT

    matrixenvironments:
        needs: getenvironments
        # this method is able to repeat the job for every environment
        # this would then have every customer as an environment within the repo, with all their secrets per environment
        strategy:
            matrix: 
                enviro: ${{ fromJson(needs.getenvironments.outputs.enviros) }}
                exclude: 
                    - enviro: Develop
        runs-on: ubuntu-latest
        environment: ${{ matrix.enviro }}
        steps:
            - run: echo '${{ secrets.SECRET }}'
    